.TH stonith 8 "February 2008"
.SH NAME
stonith \- extensible interface for remotely powering down a node in the cluster
.SH SYNOPSIS
.br
\fBstonith\fP -h
.br
\fBstonith\fP [-svh] -L
.br
\fBstonith\fP [-svh] -t stonith-device-type -n
.br
\fBstonith\fP [-svh] -t stonith-device-type {-p stonith-device-parameters | -F stonith-device-parameters-file | name=value...} [-c count] -lS
.br
\fBstonith\fP [-svh] -t stonith-device-type {-p stonith-device-parameters | -F stonith-device-parameters-file | name=value...} [-c count] [-lS] [-T {reset|on|off}] nodename
.SH DESCRIPTION
The STONITH module (a.k.a. STOMITH) provides an extensible interface for
remotely powering down a node in the cluster.
(STONITH = Shoot The Other Node In The Head).
The idea is quite simple:
when the software running on one machine wants to make sure another machine
in the cluster is not using a resource, pull the plug on the other machine.
It's simple and reliable, albeit admittedly brutal.
.SH OPTIONS
.TP
.B \-c count
Perform any actions identified by the -l, -S and -T options \fBcount\fP
times.
.TP
.B \-F stonith-device-parameters-file
Path of file specifying parameters for a stonith device. To determine the
syntax of the parameters file for a given device type run:
.nf

\fBstonith\fP -t stonith-device-type -n

.fi
All of the listed parameters need to appear in order on a single line in the
parameters file and be delimited by whitespace.
.TP
.B \-h              
Display detailed information about a stonith device including description,
configuration information, parameters and any other related information.
When specified without a stonith-device-type, detailed information on all
stonith devices is displayed.

If you don't yet own a stonith device and want to know
more about the ones we support, this information is likely to be
helpful.
.TP
.B \-L
List the valid stonith device types, suitable for passing as an argument
to the -t option.
.TP
.B \-l
List the hosts controlled by the stonith device.
.TP
.B \-n
Output the parameter names of the stonith device.
.TP
.B name=value
Parameter, in the form of a name/value pair, to pass directly to the
stonith device.
To determine the syntax of the parameters for a given device type run:
.nf

\fBstonith\fP -t stonith-device-type -n

.fi
All of the listed parameter names need to be passed with their
corresponding values.
.TP
.B \-p stonith-device-parameters
Parameters to pass directly to the stonith device.  To determine the syntax
of the parameters for a given device type run:
.nf

\fBstonith\fP -t stonith-device-type -n

.fi
All of the listed parameter names need to appear in order
and be delimited by whitespace.
.TP
.B \-S
Show the status of the stonith device.
.TP
.B \-s
Silent operation. Suppress logging of error messages to standard error.
.TP
.B \-T action
The stonith action to perform on the node identified by nodename.  Chosen 
from \fBreset\fP, \fBon\fP, and \fBoff\fP.

\fBNOTE:\fP If a nodename is specified without the -T option, the stonith
action defaults to \fBreset\fP. 
.TP
.B \-t stonith-device-type
The type of the stonith device to be used to effect stonith.
A list of supported devices for an installation may be obtained
using the -L option.
.TP
.B \-v
Ignored.
.SH EXAMPLES
To determine which stonith devices are available on your installation,
use the -L option:
.nf

\fBstonith\fP -L

.fi
All of the supported devices will be displayed one per line.  Choose one
from this list that is best for your environment - let's use wti_nps
for the rest of this example.
.
To get detailed information about this device, use the -h option:
.nf

\fBstonith\fP -t wti_nps -h

.fi
Included in the output is the list of valid parameter names for wti_nps. 
To get JUST the list of valid parameter names, use the -n option instead:
.nf

\fBstonith\fP -t wti_nps -n

.fi
All of the required parameter names will be displayed one per line.  For 
wti_nps the output is: 
.nf

ipaddr
password

.fi
There are three ways to pass these parameters to the device.  The first
(and preferred) way is by passing name/value pairs on the stonith command
line:
.nf

\fBstonith\fP -t wti_nps ipaddr=my-dev-ip password=my-dev-pw ...

.fi
The second way, which is maintained only for backward compatibility with
legacy clusters, is passing the values IN ORDER on the stonith command
line with the -p option:
.nf

\fBstonith\fP -t wti_nps -p "my-dev-ip my-dev-pw" ...

.fi
The third way, which is also maintained only for backward compatibility
with legacy clusters, is placing the values IN ORDER on a single line
in a config file:
.nf

my-dev-ip my-dev-pw

.fi
and passing the name of the file on the stonith command line with the
-F option:
.nf

\fBstonith\fP -t wti_nps -F ~/my-wtinps-config ...

.fi
To make sure you have the configuration set up correctly and that the
device is available for stonith operations, use the -S option:
.nf

\fBstonith\fP -t wti_nps ipaddr=my-dev-ip password=my-dev-pw -S

.fi
If all is well at this point, you should see something similar to:
.nf

stonith: wti_nps device OK.

.fi
If you don't, some debugging may be necessary to determine if the 
config info is correct, the device is powered on, etc.  The -d option
can come in handy here - you can add it to any stonith command to
cause it to generate debug output.
.PP
To get the list of hosts controlled by the device, use the -l option:
.nf

\fBstonith\fP -t wti_nps ipaddr=my-dev-ip password=my-dev-pw -l

.fi
All of the hosts controlled by the device will be displayed one per 
line.  For wti_nps the output could be: 
.nf

node1
node2
node3

.fi
To power off one of these hosts, use the -T option:
.nf

\fBstonith\fP -t wti_nps ipaddr=my-dev-ip password=my-dev-pw -T off node2

.fi
.SH "SEE ALSO"
.PP
\fBheartbeat\fP(8),
\fBmeatclient\fP(8)
.SH AUTHORS
.nf
stonith - Alan Robertson <alanr@unix.sh> et al.
man page - Horms <horms@verge.net.au>
.fi
